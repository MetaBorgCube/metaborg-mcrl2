module pp

imports

  libstratego-gpp
  libspoofax/sdf/pp
  libspoofax/editor/refactoring/-
  signatures/-
  desugar
  pp/-
  pp/mcrl2/-
  mcrl2/syntax/-
  statics/constraints/constraint-store

rules

  editor-format:
    (node, _, ast, path, project-path) -> (filename, result)
    with
      ext      := <get-extension> path
    ; filename := <guarantee-extension(|$[pp.[ext]])> path
    ; result   := <pp-mcrl2typecheck-string> node

rules

  pp-mcrl2typecheck-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-start-symbols)

  pp-Context-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-Context)

  pp-Derivations-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-Derivations)

  pp-DataExpr-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-MCRL2-DataExpr)

  pp-Type-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-Type)

  pp-Scheme-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-Scheme)

  pp-AllTypings-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-AllTypings)

  pp-MinimalTypings-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-MinimalTypings)

  pp-Typing-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-Typing)

  pp-Subtype-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-Subtype)

  pp-ConstraintStore-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-ConstraintStore)

  pp-Substitution-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-Substitution)

  pp-ConstraintGraph-string =
    pp-mcrl2typecheck-string(prettyprint-mcrl2-ConstraintGraph)

  pp-mcrl2typecheck-string(pp) =
    resugar-all
  ; parenthesize-mcrl2typecheck
  ; pp
  ; !V([], <id>)
  ; box2text-string(|120)

  pp-partial-mcrl2typecheck-string =
    resugar-all
  ; parenthesize-mcrl2typecheck
  ; prettyprint-mcrl2
  ; !V([], <id>)
  ; box2text-string(|120)

  pp-partial-mcrl2typecheck-string(|sort) =
    resugar-all
  ; parenthesize-mcrl2typecheck
  ; prettyprint-mcrl2(|sort)
  ; !V([], <id>)
  ; box2text-string(|120)

rules

  prettyprint-mcrl2-Int =
    ![S(<int-to-string>)]

  prettyprint-mcrl2-ConstraintStore =
    ![S(<constraint-store-to-string(pp-Type-string)>)]

rules

  mcrl2typecheckParenthesize :
    FUNCTION(ts, t) -> FUNCTION(ts', t)
    where [_|_] := <filter(?FUNCTION(_, _))> ts
        ; ts' := <map(try(?FUNCTION(_, _); !Parenthetical(<id>)))> ts

  mcrl2typecheckParenthesize :
    FUNCTION(ts, t) -> FUNCTION(ts', t)
    where [_|_] := <filter(?PRODUCT(_))> ts
        ; ts' := <map(try(?PRODUCT(_); !Parenthetical(<id>)))> ts

  mcrl2typecheckParenthesize :
    PRODUCT(ts) -> PRODUCT(ts')
    where [_|_] := <filter(?FUNCTION(_, _))> ts
        ; ts' := <map(try(?FUNCTION(_, _); !Parenthetical(<id>)))> ts

  mcrl2typecheckParenthesize :
    PRODUCT(ts) -> PRODUCT(ts')
    where [_|_] := <filter(?PRODUCT(_))> ts
        ; ts' := <map(try(?PRODUCT(_); !Parenthetical(<id>)))> ts

rules
  
  construct-textual-change = construct-textual-change(pp-partial-mcrl2typecheck-string, parenthesize, override-reconstruction, resugar)
