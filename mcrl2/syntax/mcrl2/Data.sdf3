module mcrl2/Data

imports

  mcrl2/Common
  mcrl2/Sort

template options

  keyword -/- [a-zA-Z\_0-9\'] // require layout after a keyword

context-free syntax //--- Data expressions

  MCRL2-VarDecl.VarDecl = <<MCRL2-ID> : <MCRL2-SortExpr>>

  MCRL2-VarsDecl.VarsDecl = <<{MCRL2-ID ", "}+> : <MCRL2-SortExpr>>

  MCRL2-DataExpr.DataRef         = <<MCRL2-ID>>
  MCRL2-DataExpr.Number          = <<MCRL2-NUM>>
  MCRL2-DataExpr.True            = <true>
  MCRL2-DataExpr.False           = <false>
  MCRL2-DataExpr.EmptyList       = <[ ]>
  MCRL2-DataExpr.EmptySet        = <{ }>
  MCRL2-DataExpr.EmptyBag        = <{ : }>
  MCRL2-DataExpr.ListEnum        = <[<{MCRL2-DataExpr ", "}+>]>
  MCRL2-DataExpr.BagEnum         = <{<{MCRL2-BagEnumElt ", "}+>}>
  MCRL2-DataExpr.SetBagComp      = <{ <MCRL2-VarDecl> | <MCRL2-DataExpr>  }>
  MCRL2-DataExpr.SetEnum         = <{<{MCRL2-DataExpr ", "}+>}>
  MCRL2-DataExpr                 = <(<MCRL2-DataExpr>)> {bracket}
  MCRL2-DataExpr.FunUpdate       = [[MCRL2-DataExpr]\[[MCRL2-DataExpr] -> [MCRL2-DataExpr]\]] {left}
  MCRL2-DataExpr.FunApp          = <<MCRL2-DataExpr>(<{MCRL2-DataExpr ", "}+>)> {left}
  MCRL2-DataExpr.Neg_SetCompl    = <!<MCRL2-DataExpr>>
  MCRL2-DataExpr.UnaryMinus      = <-<MCRL2-DataExpr>>
  MCRL2-DataExpr.ListSize        = <#<MCRL2-DataExpr>>
  MCRL2-DataExpr.ForAll          = <forall <{MCRL2-VarsDecl ", "}+> . <MCRL2-DataExpr>> {right, longest-match}
  MCRL2-DataExpr.Exists          = <exists <{MCRL2-VarsDecl ", "}+> . <MCRL2-DataExpr>> {right, longest-match}
  MCRL2-DataExpr.Lambda          = <lambda <{MCRL2-VarsDecl ", "}+> . <MCRL2-DataExpr>> {right, longest-match}
  MCRL2-DataExpr.Impl            = [[MCRL2-DataExpr] => [MCRL2-DataExpr]] {right}
  MCRL2-DataExpr.Disj            = <<MCRL2-DataExpr> || <MCRL2-DataExpr>> {right}
  MCRL2-DataExpr.Conj            = <<MCRL2-DataExpr> && <MCRL2-DataExpr>> {right}
  MCRL2-DataExpr.Equal           = <<MCRL2-DataExpr> == <MCRL2-DataExpr>> {left}
  MCRL2-DataExpr.Inequal         = <<MCRL2-DataExpr> != <MCRL2-DataExpr>> {left}
  MCRL2-DataExpr.Smaller         = [[MCRL2-DataExpr] < [MCRL2-DataExpr]] {left}
  MCRL2-DataExpr.SmallerOrEqual  = [[MCRL2-DataExpr] <= [MCRL2-DataExpr]] {left}
  MCRL2-DataExpr.LargerOrEqual   = [[MCRL2-DataExpr] >= [MCRL2-DataExpr]] {left}
  MCRL2-DataExpr.Larger          = [[MCRL2-DataExpr] > [MCRL2-DataExpr]] {left}
  MCRL2-DataExpr.Member          = <<MCRL2-DataExpr> in <MCRL2-DataExpr>> {left}
  MCRL2-DataExpr.ListCons        = [[MCRL2-DataExpr] |> [MCRL2-DataExpr]] {right}
  MCRL2-DataExpr.ListSnoc        = [[MCRL2-DataExpr] <| [MCRL2-DataExpr]] {left}
  MCRL2-DataExpr.ListConc        = <<MCRL2-DataExpr> ++ <MCRL2-DataExpr>> {left}
  MCRL2-DataExpr.Add_SetBagUnion = <<MCRL2-DataExpr> + <MCRL2-DataExpr>> {left}
  MCRL2-DataExpr.Sub_SetBagDiff  = <<MCRL2-DataExpr> - <MCRL2-DataExpr>> {left}
  MCRL2-DataExpr.Div             = <<MCRL2-DataExpr> / <MCRL2-DataExpr>> {left}
  MCRL2-DataExpr.IntDiv          = <<MCRL2-DataExpr> div <MCRL2-DataExpr>> {left}
  MCRL2-DataExpr.IntMod          = <<MCRL2-DataExpr> mod <MCRL2-DataExpr>> {left}
  MCRL2-DataExpr.Mul_SetBagIsect = <<MCRL2-DataExpr> * <MCRL2-DataExpr>> {left}
  MCRL2-DataExpr.EltAt           = <<MCRL2-DataExpr> . <MCRL2-DataExpr>> {left}
  MCRL2-DataExpr.Where           = <<MCRL2-DataExpr> whr <{MCRL2-Assignment ", "}+> end> {left}
  MCRL2-DataExpr.As              = <<MCRL2-DataExpr> : <MCRL2-SortExpr>> /* extension */

  MCRL2-Assignment.Assign = <<MCRL2-ID> = <MCRL2-DataExpr>>

  MCRL2-BagEnumElt.BagEnumElt = <<MCRL2-DataExpr> : <MCRL2-DataExpr>>

context-free priorities

  {
    MCRL2-DataExpr.As
  }
  >
  /* 13 */ { left:
    MCRL2-DataExpr.FunUpdate
    MCRL2-DataExpr.FunApp
  }
  >
  /* 12 (unary) */ {
    MCRL2-DataExpr.Neg_SetCompl
    MCRL2-DataExpr.UnaryMinus
    MCRL2-DataExpr.ListSize
  }
  >
  /* 12 (binary) */ { left:
    MCRL2-DataExpr.Mul_SetBagIsect
    MCRL2-DataExpr.EltAt
  }
  >
  /* 11 */ { left:
    MCRL2-DataExpr.Div
    MCRL2-DataExpr.IntDiv
    MCRL2-DataExpr.IntMod
  }
  >
  /* 10 */ { left:
    MCRL2-DataExpr.Add_SetBagUnion
    MCRL2-DataExpr.Sub_SetBagDiff
  }
  >
  /* 9 */ { left:
    MCRL2-DataExpr.ListConc
  }
  >
  /* 8 */ { left:
    MCRL2-DataExpr.ListSnoc
  }
  >
  /* 7 */ { right:
    MCRL2-DataExpr.ListCons
  }
  >
  /* 6 */ { left:
    MCRL2-DataExpr.Smaller
    MCRL2-DataExpr.SmallerOrEqual
    MCRL2-DataExpr.LargerOrEqual
    MCRL2-DataExpr.Larger
    MCRL2-DataExpr.Member
  }
  >
  /* 5 */ { left:
    MCRL2-DataExpr.Equal
    MCRL2-DataExpr.Inequal
  }
  >
  /* 4 */ { right:
    MCRL2-DataExpr.Disj
  }
  >
  /* 3 */ { right:
    MCRL2-DataExpr.Conj
  }
  >
  /* 2 */ { right:
    MCRL2-DataExpr.Impl
  }
  >
  /* 1 */ { right:
    MCRL2-DataExpr.ForAll
    MCRL2-DataExpr.Exists
    MCRL2-DataExpr.Lambda
  }
  >
  /* 0 */ { left:
    MCRL2-DataExpr.Where
  }
